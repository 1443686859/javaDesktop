class Solution {
    public int[] decrypt(int[] code, int k) {
        int n = code.length;
        int[] sum = new int[n];
        sum[0] = code[0];
        for (int i = 1; i < n; i++) {
            sum[i] = sum[i - 1] + code[i];
        }
        if (k > 0) {
            for (int i = 0; i < n; i++) {
                if (i + k < n) {
                    code[i] = sum[i + k] - sum[i];
                } else {
                    code[i] = sum[n - 1] - sum[i];
                    code[i] += sum[i + k - n];
                }
            }
            return code;
        } else if (k == 0) {
            return new int[n];
        } else {
            for (int i = 0; i < n; i++) {
                if (i + k >= 0) {
                    code[i] = sum[i - 1] - (i + k == 0 ? 0 : sum[i + k - 1]);
                } else {
                    if (i > 0) {
                        code[i] = sum[i - 1];
                    } else {
                        code[i]= 0;
                    }
                    code[i] += sum[n - 1] - sum[n - 1 + (i + k)];
                }
            }
            return code;
        }
    }
}

//runtime:0 ms
//memory:41.1 MB
