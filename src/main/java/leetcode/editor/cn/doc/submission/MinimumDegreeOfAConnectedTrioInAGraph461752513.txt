class Solution {
    public int minTrioDegree(int n, int[][] edges) {
        int[][] d = new int[n + 1][n + 1];
        for (int[] e : edges) {
            d[e[0]][e[1]]++;
            d[e[1]][e[0]]++;
            d[e[0]][e[0]]++;
            d[e[1]][e[1]]++;
        }
        int min = Integer.MAX_VALUE;
        for (int i = 1; i <= n; i++) {
            int current = d[i][i];
            for (int j = i + 1; j <= n; j++) {
                if (d[i][j] == 0) {
                    continue;
                }
                current = current + d[j][j] - 2 * d[i][j];
                for (int z = j + 1; z <= n; z++) {
                    if (d[i][z] == 0 || d[j][z] == 0) {
                        continue;
                    }
                    current = current + d[z][z] - 2 * d[i][z] - 2 * d[j][z];
                    min = Math.min(min, current);
                }
            }
        }
        return min == Integer.MAX_VALUE ? -1 : min;
    }
}

//total_testcases:68
//total_correct:37
//input_formatted:10
[[3,4],[3,10],[5,7],[9,5],[8,3],[5,10],[9,8],[10,9],[1,6],[1,3],[6,2],[6,8],[4,8],[3,6],[8,2],[9,1],[9,4],[7,3],[7,6],[3,2],[3,5],[5,2],[4,10],[9,3],[5,8],[8,7],[9,6],[10,1],[10,7],[1,4],[2,9],[1,7]]
//expected_output:11
//code_output:13
//last_testcase:10
[[3,4],[3,10],[5,7],[9,5],[8,3],[5,10],[9,8],[10,9],[1,6],[1,3],[6,2],[6,8],[4,8],[3,6],[8,2],[9,1],[9,4],[7,3],[7,6],[3,2],[3,5],[5,2],[4,10],[9,3],[5,8],[8,7],[9,6],[10,1],[10,7],[1,4],[2,9],[1,7]]
