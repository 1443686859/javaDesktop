class Solution {
        boolean[][] grid ;
    public int countBeautifulPairs(int[] nums) {
        int result = 0;
        grid = new boolean[10][10];
        for (int i = 1; i < 10; i++) {
            for (int j = i; j < 10; j++) {
                grid[i][j] = gcd(i, j) == 1;
                grid[j][i] = grid[i][j];
            }
        }
        for (int i = 0; i < nums.length; i++) {
            int a = nums[i];
            while (a >= 10) {
                a /= 10;
            }
            for (int j = i + 1; j < nums.length; j++) {
                if (grid[a][nums[j] % 10]) {
                    result ++;
                }
            }
        }
        return result;
    }
    public int gcd(int a, int b) {
        return b % a == 0 ? a : gcd(b % a, a);
    }
}

//runtime:9 ms
//memory:43.7 MB
