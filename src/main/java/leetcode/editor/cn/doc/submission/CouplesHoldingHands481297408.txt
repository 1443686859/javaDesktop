class Solution {
    public int minSwapsCouples(int[] row) {
        int n = row.length;
        int count = 0;
        int[] pre = new int[n / 2];
        Arrays.fill(pre, -1);
        int oneCount = 0;
        Set<Integer> set = new HashSet<>();
        for (int i = 0; i < n; i+=2) {
            int current = 0;
            if (row[i] / 2 != row[i + 1] / 2) {
                count++;
                current |= 1 << row[i] / 2;
                current |= 1 << row[i + 1] / 2;
                if (!set.add(current)) {
                    count -= 2;
                    oneCount ++;
                }
            }
        }

        return oneCount + (count == 0 ? 0 : count - 1);

    }
}

//total_testcases:56
//total_correct:29
//input_formatted:[10,7,4,2,3,0,9,11,1,5,6,8]
//expected_output:4
//code_output:5
//last_testcase:[10,7,4,2,3,0,9,11,1,5,6,8]
