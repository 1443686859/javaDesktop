/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    List<Long> result;
    public long kthLargestLevelSum(TreeNode root, int k) {
        result = new ArrayList<>();
        dfs(root, 0);
        Collections.sort(result);
        return result.size() <= k ? -1 : result.get(result.size() - k);
    }
    public void dfs(TreeNode root, int index) {
        if (root == null) {
            return;
        }
        if (index >= result.size()) {
            result.add(root.val * 1L);
        } else {
            long current = result.get(index);
            current += root.val;
            result.set(index, current);
        }
        dfs(root.left, index + 1);
        dfs(root.right, index + 1);
    }
}

//total_testcases:45
//total_correct:40
//input_formatted:[411310,211244,111674]
2
//expected_output:322918
//code_output:-1
//last_testcase:[411310,211244,111674]
2
