class Solution {
    public int maximumPrimeDifference(int[] nums) {
        int max = -1;
        for (int i : nums) {
            max = Math.max(max, i);
        }
        boolean[] used = new boolean[max + 1];
        int[] prime = new int[max + 1];
        int index = 0;
        for (int i = 2; i <= max; i++) {
            if (!used[i]) {
                prime[index++] = i;
            }
            int j = 0;
            while (j < index && prime[j] * i <= max) {
                used[prime[j] * i] = true;
                if (i % prime[j] == 0) {
                    break;
                }
                j++;
            }
        }
        int maxIndex = -1;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length; i++) {
            if (!used[nums[i]]) {
                min = Math.min(min, i);
                maxIndex = Math.max(maxIndex, i);
            }
        }
        return maxIndex - min;
    }
}

//total_testcases:904
//total_correct:739
//input_formatted:[1,7]
//expected_output:0
//code_output:1
//last_testcase:[1,7]
