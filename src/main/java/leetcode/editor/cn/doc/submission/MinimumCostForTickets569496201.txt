class Solution {
    public int mincostTickets(int[] days, int[] costs) {
        int[] dp = new int[days.length];
        for (int i = 0; i < days.length; i++) {
            dp[i] = Math.min(Math.min(costs[1], costs[2]), costs[0]);
            if (i > 0) {
                dp[i] += dp[i - 1];
            }
            for (int j = i - 1; j >= 0 && days[j] >= days[i] - 30; j--) {
                if (days[i] - days[j] <= 7) {
                    dp[i] = Math.min(dp[i],dp[j] + costs[1]);
                } else {
                    dp[i] = Math.min(dp[i],dp[j] + costs[2]);
                }
            }
        }
        return dp[days.length - 1];
    }
}

//total_testcases:70
//total_correct:30
//input_formatted:[1,5,8,9,10,12,13,16,17,18,19,20,23,24,29]
[3,12,54]
//expected_output:39
//code_output:42
//last_testcase:[1,5,8,9,10,12,13,16,17,18,19,20,23,24,29]
[3,12,54]
