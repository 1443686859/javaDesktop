class Solution {
    public int maxNumberOfAlloys(int n, int k, int budget, List<List<Integer>> composition, List<Integer> stock, List<Integer> cost) {
        int rightTemp = budget;
        for (int i : stock) {
            rightTemp += i;
        }
        int max = 0;
        for (int i = 0; i < k; i++) {
            int right = rightTemp;
            int left = 0;
            while (left <= right) {
                int mid = (left + right) / 2;
                if (check(composition.get(i), stock, cost, mid, budget)) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            }
            max = Math.max(max, right);
        }
        return max;
    }
    public boolean check(List<Integer> c, List<Integer> stock, List<Integer> cost,int target, int total) {
        int sum = 0;
        for (int i = 0; i < c.size(); i++) {
            if (stock.get(i) < target * c.get(i)) {
                sum += (target * c.get(i) - stock.get(i)) * cost.get(i);
            }
            if (sum > total) {
                return false;
            }
        }
        return true;
    }
}

//total_testcases:730
//total_correct:708
//input_formatted:15
17
80884895
[[53,57,69,73,13,41,70,74,50,74,64,54,93,86,66],[73,85,78,31,68,34,65,70,58,92,54,24,5,94,79],[19,12,21,48,18,62,37,38,94,16,30,88,23,18,48],[62,74,62,77,57,23,42,90,46,88,76,22,60,1,62],[99,37,97,67,51,97,75,40,49,40,77,12,27,62,37],[27,9,32,20,2,36,95,30,96,51,67,23,29,56,39],[69,83,34,27,75,42,14,59,20,34,75,3,56,53,43],[33,42,26,21,10,25,6,94,7,64,65,58,94,83,7],[88,11,62,92,90,69,1,54,6,44,82,5,28,46,47],[61,16,58,87,5,95,23,93,14,58,77,32,37,72,39],[64,14,55,81,60,52,36,9,97,84,55,41,28,75,37],[5,5,97,92,18,3,65,69,95,70,61,7,47,100,19],[90,66,53,17,94,70,53,42,34,19,94,29,31,58,11],[44,77,21,33,98,84,28,74,39,49,57,47,72,95,29],[89,68,13,47,29,57,36,47,46,69,97,81,23,33,45],[27,63,96,44,22,1,59,31,87,54,10,66,62,54,88],[87,25,6,46,44,3,31,97,83,58,6,46,92,57,45]]
[24,13,1,7,76,99,26,62,25,65,47,27,93,41,5]
[45,6,87,41,82,40,36,26,53,92,100,89,23,39,75]
//expected_output:2443
//code_output:40485331
//last_testcase:15
17
80884895
[[53,57,69,73,13,41,70,74,50,74,64,54,93,86,66],[73,85,78,31,68,34,65,70,58,92,54,24,5,94,79],[19,12,21,48,18,62,37,38,94,16,30,88,23,18,48],[62,74,62,77,57,23,42,90,46,88,76,22,60,1,62],[99,37,97,67,51,97,75,40,49,40,77,12,27,62,37],[27,9,32,20,2,36,95,30,96,51,67,23,29,56,39],[69,83,34,27,75,42,14,59,20,34,75,3,56,53,43],[33,42,26,21,10,25,6,94,7,64,65,58,94,83,7],[88,11,62,92,90,69,1,54,6,44,82,5,28,46,47],[61,16,58,87,5,95,23,93,14,58,77,32,37,72,39],[64,14,55,81,60,52,36,9,97,84,55,41,28,75,37],[5,5,97,92,18,3,65,69,95,70,61,7,47,100,19],[90,66,53,17,94,70,53,42,34,19,94,29,31,58,11],[44,77,21,33,98,84,28,74,39,49,57,47,72,95,29],[89,68,13,47,29,57,36,47,46,69,97,81,23,33,45],[27,63,96,44,22,1,59,31,87,54,10,66,62,54,88],[87,25,6,46,44,3,31,97,83,58,6,46,92,57,45]]
[24,13,1,7,76,99,26,62,25,65,47,27,93,41,5]
[45,6,87,41,82,40,36,26,53,92,100,89,23,39,75]
