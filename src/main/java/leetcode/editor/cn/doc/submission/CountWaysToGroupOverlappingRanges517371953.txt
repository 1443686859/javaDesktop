class Solution {
        int MOD = 1_000_000_007;
    public int countWays(int[][] ranges) {
        Arrays.sort(ranges, (a, b) -> a[0] == b[0] ? a[1] - b[1] : a[0] - b[0]);
        int count = 1;
        for (int i = 1; i < ranges.length; i++) {
            if (ranges[i][0] > ranges[i - 1][1]) {
                count++;
            }
        }
        return fastPow(2, count);
    }
    public int fastPow(int base, int pow) {
        long result = 1L;
        while (pow != 0) {
            if ((pow & 1) == 1) {
                result = (result * base) % MOD;
            }
            base = (base * base) % MOD;
            pow >>= 1;
        }
        return (int) result;
    }

}

//total_testcases:32
//total_correct:22
//input_formatted:[[34,56],[28,29],[12,16],[11,48],[28,54],[22,55],[28,41],[41,44]]
//expected_output:2
//code_output:4
//last_testcase:[[34,56],[28,29],[12,16],[11,48],[28,54],[22,55],[28,41],[41,44]]
