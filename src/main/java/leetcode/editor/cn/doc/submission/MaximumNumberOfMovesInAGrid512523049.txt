class Solution {
    public int maxMoves(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int[][] result = new int[n][m];
        int max = 0;
        for (int i = 1; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[j][i] > grid[j][i - 1]) {
                    result[j][i] = Math.max(result[j][i], result[j][i - 1] + 1);
                }
                if (j > 1 && grid[j][i] > grid[j - 1][i - 1]) {
                    result[j][i] = Math.max(result[j][i], result[j - 1][i - 1] + 1);
                }
                if (j < n - 1 && grid[j][i] > grid[j + 1][i - 1]) {
                    result[j][i] = Math.max(result[j][i], result[j + 1][i - 1] + 1);
                }
                max = Math.max(max, result[j][i]);
            }
        }
        return max < m -1 ?0 :max ;
    }
}

//total_testcases:814
//total_correct:186
//input_formatted:[[187,167,209,251,152,236,263,128,135],[267,249,251,285,73,204,70,207,74],[189,159,235,66,84,89,153,111,189],[120,81,210,7,2,231,92,128,218],[193,131,244,293,284,175,226,205,245]]
//expected_output:3
//code_output:0
//last_testcase:[[187,167,209,251,152,236,263,128,135],[267,249,251,285,73,204,70,207,74],[189,159,235,66,84,89,153,111,189],[120,81,210,7,2,231,92,128,218],[193,131,244,293,284,175,226,205,245]]
