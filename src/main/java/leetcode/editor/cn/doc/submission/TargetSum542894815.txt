class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int count = 0;
        int n = nums.length;
        int max = (1 << n) - 1;
        for (int i = 0; i <= max; i++) {
            if (sum(nums, i, target)) {
                count++;
            }
        }
        return count;
    }
    public boolean sum(int[] nums, int index ,int target) {
        int sum = 0;
        int n = nums.length;
        for (int i = 0; i < n; i++) {
            if ((index & (1 << i)) != 0) {
                sum += nums[i];
            } else {
                sum -= nums[i];
            }
        }
        return sum == target;
    }
}

//runtime:N/A
//memory:N/A
//total_testcases:140
//total_correct:62
//input_formatted:[35,16,11,38,44,5,17,20,23,0,27,46,38,29,22,18,27,34,12,10]
22
//expected_output:6534
//code_output:
//runtime_error:
//last_testcase:[35,16,11,38,44,5,17,20,23,0,27,46,38,29,22,18,27,34,12,10] 22
