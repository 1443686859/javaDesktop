class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] result = new int[n][2];
        result[0][1] = -prices[0];
        for (int i = 1; i < n; i++) {
            result[i][1] =  i >= 2 ? Math.max(result[i - 1][1], result[i - 2][0] - prices[i]) :  - prices[i];
            result[i][0] = Math.max(result[i- 1][0], result[i - 1][1] + prices[i]);
        }
        return Math.max(result[n - 1][0], result[n - 1][1]);
    }
}

//total_testcases:210
//total_correct:173
//input_formatted:[1,2,4]
//expected_output:3
//code_output:2
//last_testcase:[1,2,4]
