class SmallestInfiniteSet {
    int min;
     PriorityQueue<Integer> queue;
        public SmallestInfiniteSet() {
            queue = new PriorityQueue<>();
            min = 1;
        }

    
    public int popSmallest() {
        if (!queue.isEmpty()) {
            return queue.poll();
        } else {
            return min++;
        }
    }
    
    public void addBack(int num) {
        if (num < min && !queue.contains(num)) {
            queue.add(num);
        }
    }
}

/**
 * Your SmallestInfiniteSet object will be instantiated and called as such:
 * SmallestInfiniteSet obj = new SmallestInfiniteSet();
 * int param_1 = obj.popSmallest();
 * obj.addBack(num);
 */

//runtime:8 ms
//memory:43.3 MB
