class Solution {
    public long countPrefixSuffixPairs(String[] words) {
        Map<String, Integer> count = new HashMap<>();
        long result = 0;
        for (String word : words) {
            int[] next = getNext(word);
            result += get(next, count, word);
            count.put(word, count.getOrDefault(word, 0) + 1);
        }
        return result;
    }
    public long get(int[] next, Map<String, Integer> count, String current) {
        int n = next.length - 1;
        if (next.length == 1) {
            return count.getOrDefault(current, 0);
        }
        long result = 0;
        while (n > 0) {
            result += count.getOrDefault(current.substring(0, next[n]), 0);
            n = next[n - 1];
        }
        return result;
    }
    public int[] getNext(String word) {
        int n = word.length();
        int[] result = new int[n];
        int index = 0;
        for (int i = 1; i < n; i++) {
            while (index > 0 && word.charAt(i) != word.charAt(index)) {
                index = result[index];
            }
            if (word.charAt(i) == word.charAt(index)) {
                index++;
            }
            result[i] = index;
        }
        return result;
    }
}

//runtime:N/A
//memory:N/A
//total_testcases:596
//total_correct:4
//input_formatted:["a","bbc"]
//expected_output:0
//code_output:
//runtime_error:
//last_testcase:["a","bbc"]
