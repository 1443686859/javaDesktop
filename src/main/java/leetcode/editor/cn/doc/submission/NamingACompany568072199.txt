class Solution {
    public long distinctNames(String[] ideas) {
        Set<String> set = new HashSet<>();
        int index = 0;
        int total = 0;
        for (String idea : ideas) {
            set.add(idea);
            total |= 1 << (idea.charAt(0) - 1);
        }
        int n = ideas.length;
        int[][] sum = new int[26][26];
        int[] count = new int[n];
        for (String s : ideas) {
            for (int i = 0; i < 26; i++)   {
                char c = (char) ('a' + i);
                if (((1 << i) & total) != 0 && !set.contains(c + s.substring(1))) {
                    sum[s.charAt(0) - 'a'][i]++;
                    count[index] |= 1 << i;
                }
            }
            index++;
        }
        index = 0;
        long result = 0;
        for (String s : ideas) {
            int i = s.charAt(0) - 'a';
            for (int j = 0; j < 26; j++) {
                if ((count[index] & (1 << j)) != 0) {
                    result += sum[i][j] == 0 || sum[j][i] == 0 ? 0 : sum[j][i];
                }
            }
            index++;
        }
        return result;
    }
}

//runtime:721 ms
//memory:55.4 MB
