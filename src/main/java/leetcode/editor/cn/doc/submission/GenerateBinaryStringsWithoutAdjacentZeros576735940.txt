class Solution {
    int max;
    List<String> result;
    public List<String> validStrings(int n) {
        max = n;
        result = new ArrayList<>();
        dfs(n, n + 1, 0);
        return result;
    }
    public void dfs(int count, int pre, int temp) {
        if (count == 0) {
            result.add(String.format("%0" + max +"d", temp));
            return;
        }
        if (pre - count != 2) {
            dfs(count - 1, pre,temp * 10);
        }
        dfs(count - 1, count, temp * 10 + 1);

    }

}

//total_testcases:20
//total_correct:12
//input_formatted:11
//expected_output:["01010101010","01010101011","01010101101","01010101110","01010101111","01010110101","01010110110","01010110111","01010111010","01010111011","01010111101","01010111110","01010111111","01011010101","01011010110","01011010111","01011011010","01011011011","01011011101","01011011110","01011011111","01011101010","01011101011","01011101101","01011101110","01011101111","01011110101","01011110110","01011110111","01011111010","01011111011","01011111101","01011111110","01011111111","01101010101","01101010110","01101010111","01101011010","01101011011","01101011101","01101011110","01101011111","01101101010","01101101011","01101101101","01101101110","01101101111","01101110101","01101110110","01101110111","01101111010","01101111011","01101111101","01101111110","01101111111","01110101010","01110101011","01110101101","01110101110","01110101111","01110110101","01110110110","01110110111","01110111010","01110111011","01110111101","01110111110","01110111111","01111010101","01111010110","01111010111","01111011010","01111011011","01111011101","01111011110","01111011111","01111101010","01111101011","01111101101","01111101110","01111101111","01111110101","01111110110","01111110111","01111111010","01111111011","01111111101","01111111110","01111111111","10101010101","10101010110","10101010111","10101011010","10101011011","10101011101","10101011110","10101011111","10101101010","10101101011","10101101101","10101101110","10101101111","10101110101","10101110110","10101110111","10101111010","10101111011","10101111101","10101111110","10101111111","10110101010","10110101011","10110101101","10110101110","10110101111","10110110101","10110110110","10110110111","10110111010","10110111011","10110111101","10110111110","10110111111","10111010101","10111010110","10111010111","10111011010","10111011011","10111011101","10111011110","10111011111","10111101010","10111101011","10111101101","10111101110","10111101111","10111110101","10111110110","10111110111","10111111010","10111111011","10111111101","10111111110","10111111111","11010101010","11010101011","11010101101","11010101110","11010101111","11010110101","11010110110","11010110111","11010111010","11010111011","11010111101","11010111110","11010111111","11011010101","11011010110","11011010111","11011011010","11011011011","11011011101","11011011110","11011011111","11011101010","11011101011","11011101101","11011101110","11011101111","11011110101","11011110110","11011110111","11011111010","11011111011","11011111101","11011111110","11011111111","11101010101","11101010110","11101010111","11101011010","11101011011","11101011101","11101011110","11101011111","11101101010","11101101011","11101101101","11101101110","11101101111","11101110101","11101110110","11101110111","11101111010","11101111011","11101111101","11101111110","11101111111","11110101010","11110101011","11110101101","11110101110","11110101111","11110110101","11110110110","11110110111","11110111010","11110111011","11110111101","11110111110","11110111111","11111010101","11111010110","11111010111","11111011010","11111011011","11111011101","11111011110","11111011111","11111101010","11111101011","11111101101","11111101110","11111101111","11111110101","11111110110","11111110111","11111111010","11111111011","11111111101","11111111110","11111111111"]
//code_outputmore chars
//last_testcase:11
