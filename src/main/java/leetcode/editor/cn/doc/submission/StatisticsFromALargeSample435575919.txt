class Solution {
    public double[] sampleStats(int[] count) {
        long sum = 0;
        int sumCount = 0;
        int maxIndex = -1;
        double[] result = new double[5];
        result[0] = -1;
        result[1] = -1;
        for (int i = 0; i < count.length; i++) {
            sumCount += count[i];
            sum += count[i] * i;
            if (result[0] == -1 && count[i] != 0) {
                result[0] = i;
            }
            if (result[1] == -1 && count[count.length - 1 - i] != 0) {
                result[1] = count.length - 1 - i;
            }
            if (maxIndex == -1) {
                maxIndex = i;
            } else if (count[i] > count[maxIndex]) {
                maxIndex = i;
            }
        }
        result[4] = maxIndex;
        result[2] = 1d * sum / sumCount;
        int targetIndex1 = (sumCount - 1) / 2 + 1;
        int targetIndex2 = sumCount / 2 + 1;
        for (int i = 0; i < count.length; i++) {
            if (targetIndex1 <= 0 ) {
                break;
            }
            if (count[i] != 0) {
                targetIndex1 -= count[i];
                if (targetIndex1 <= 0) {
                    result[3] += i;
                }
            }
        }
        for (int i = 0; i < count.length; i++) {
            if (targetIndex2 <= 0 ) {
                break;
            }
            if (count[i] != 0) {
                targetIndex2 -= count[i];
                if (targetIndex2 <= 0) {
                    result[3] += i;
                }
            }
        }
        result[3] = result[3] * 1d / 2;
        return result;

    }
}

//total_testcases:52
//total_correct:51
//input_formatted:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3510,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6718,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27870,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26256,0,0,0,0,9586565,0,0,0,0,0,0,0,2333,0,0,0,0]
//expected_output:[32.00000,251.00000,242.40435,243.00000,243.00000]
//code_output:[32.00000,251.00000,-202.51838,243.00000,243.00000]
//last_testcase:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3510,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6718,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27870,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26256,0,0,0,0,9586565,0,0,0,0,0,0,0,2333,0,0,0,0]
