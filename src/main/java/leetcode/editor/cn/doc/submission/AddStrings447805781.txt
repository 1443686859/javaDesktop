class Solution {
    public String addStrings(String num1, String num2) {
        int inc = 0;
        StringBuilder result = new StringBuilder();
        int length1 = num1.length();
        int length2 = num2.length();
        while (length2 >= 1 && length1 >= 1) {
            int current = num1.charAt(length1 - 1) - '0' + (num2.charAt(length2 - 1) - '0') + inc;
            inc = current / 10;
            current = current % 10;
            result.insert(0, current);
            length2 --;
            length1--;
        }
        while (length2 >= 1) {
            int current = inc + (num2.charAt(length2 - 1) - '0');
            inc = current / 10;
            current =current % 10;
            result.insert(0, current);
            length2--;
        }
        while (length1 >= 1) {
            int current = inc + (num1.charAt(length1 - 1) - '0');
            inc = current / 10;
            current =current % 10;
            result.insert(0, current);
            length1--;
        }
        if (inc != 0) {
            result.insert(0, inc);
        }
        return result.toString();
    }
}

//runtime:3 ms
//memory:42.4 MB
