class Solution {
    public int minimumPossibleSum(int n, int target) {
        int index = n;
        int mod = 1_000_000_007;
        long result = 1L * n * (1 + index) / 2;
        index = Math.max(index + 1, target);
        for (int i = 1; i <= target / 2; i++) {
            if (target - i <= n && i != target - i) {
                result = (result - target + i + mod) % mod;
                result = (result + index ++) % mod;
            }
        }
        return (int)(result % mod);
    }
}

//runtime:N/A
//memory:N/A
//total_testcases:575
//total_correct:574
//input_formatted:1000000000
1000000000
//expected_output:750000042
//code_output:
//runtime_error:
//last_testcase:1000000000 1000000000
