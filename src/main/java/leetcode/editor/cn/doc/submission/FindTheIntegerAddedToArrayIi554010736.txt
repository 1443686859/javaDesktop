class Solution {
    public int minimumAddedInteger(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int result = Integer.MAX_VALUE;
        for (int i = 0; i < nums1.length; i++) {
            for (int j = i + 1; j < nums1.length; j++) {
                int index = 0;
                int pre = -1;
                int start = -1;
                boolean used = false;
                for (int z = 1; z < nums2.length; z++) {
                    int temp = nums2[z] - nums2[z - 1];
                    int count = 0;
                    while (index < nums1.length && (index == i || index == j || pre == i || pre == j || pre == -1) && count < 2) {
                        if (index != i && index != j) {
                            count++;
                        }
                        if (count == 1) {
                            pre = index;
                        }
                        index++;
                    }
                    if (index == nums1.length || temp != nums1[index] - nums1[pre]) {
                        used = true;
                        break;
                    }
                    if (start == -1) {
                        start = pre;
                    }
                }
                if (!used) {
                    result = Math.min(result, nums2[0] - nums1[start]);
                }

            }
        }
        return result;
    }
}

//runtime_error:java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 3
  at line 33, Solution.minimumAddedInteger
  at line 56, __DriverSolution__.__helper__
  at line 89, __Driver__.main
//last_testcase:[4,7,5] [5]
