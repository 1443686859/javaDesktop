class Solution {
    public int[] fullBloomFlowers(int[][] flowers, int[] people) {
        int[] result = new int[people.length];
        Arrays.sort(flowers, (n, o) -> {
            if (n[0] != o[0]) {
                return n[0] - o[0];
            } else {
                return n[1] - o[1];
            }
        });
        for (int i = 0; i < people.length; i++) {
            int current = people[i];
            int left = 0;
            int right = flowers.length - 1;
            while (left <= right) {
                int mid = (left + right) / 2;
                if (flowers[mid][0] <= current && flowers[mid][1] >= current) {
                    left = mid + 1;
                } else if (flowers[mid][1] <= current){
                    left = mid + 1;
                } else if (flowers[mid][0] >= current) {
                    right = mid - 1;
                }
            }
            int rightIndex = right;
            left = 0;
            right = flowers.length - 1;
            while (left <= right) {
                int mid = (left + right) / 2;
                if (flowers[mid][0] <= current && flowers[mid][1] >= current) {
                    right = mid - 1;
                } else if (flowers[mid][1] <= current){
                   left = mid + 1;
                } else if (flowers[mid][0] >= current) {
                    right = mid - 1;
                }
            }
            int leftIndex = left;
            result[i] = rightIndex - leftIndex + 1;
        }
        return result;
    }
}

//total_testcases:52
//total_correct:19
//input_formatted:[[21,34],[17,37],[23,43],[17,46],[37,41],[44,45],[32,45]]
[31,41,10,12]
//expected_output:[4,4,0,0]
//code_output:[4,5,0,0]
//last_testcase:[[21,34],[17,37],[23,43],[17,46],[37,41],[44,45],[32,45]]
[31,41,10,12]
