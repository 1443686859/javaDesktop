> Problem: [1997. 访问完所有房间的第一天](https://leetcode.cn/problems/first-day-where-you-have-been-in-all-the-rooms/description/)

[TOC]

# 思路

> 记忆化搜索模板题

# Code

* []

```Python
class Solution:
    def firstDayBeenInAllRooms(self, nextVisit: List[int]) -> int:
        # 记忆化搜索
        # 到第x的天数等于两次到第x-1的天数 + 1
        # 第一次到x-1后，回到nextVisit[x-1] 需要 + 1，后续计算nextVisit[x-1] 到x-1的天数满足两次x-1
        # 利用前缀和的思想：nextVisit[x-1] 到x-1的天数 = 到第x -1 的天数 - 到nextVisit[x-1] 的天数
        # 得到转移方程 dp[x] = dp[x -1] + 1 + 1 + dp[x-1] - dp[nextVisit[x-1]] = 2 * dp[x-1] + 2 - dp[nextVisit[x-1]]
        n = len(nextVisit)
        MOD = 10 ** 9 + 7
        @cache
        def dfs (x: int) -> int:
            if x == 0:
                return 0
            res = 2*dfs(x-1) + 2 - dfs(nextVisit[x-1])
            return res 
        ans = dfs(n-1) % MOD
        dfs.cache_clear()
        return ans
```

