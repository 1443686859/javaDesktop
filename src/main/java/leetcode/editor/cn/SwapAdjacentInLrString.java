//Âú®‰∏Ä‰∏™Áî± 'L' , 'R' Âíå 'X' ‰∏â‰∏™Â≠óÁ¨¶ÁªÑÊàêÁöÑÂ≠óÁ¨¶‰∏≤Ôºà‰æãÂ¶Ç"RXXLRXRXL"Ôºâ‰∏≠ËøõË°åÁßªÂä®Êìç‰Ωú„ÄÇ‰∏ÄÊ¨°ÁßªÂä®Êìç‰ΩúÊåáÁî®‰∏Ä‰∏™"LX"ÊõøÊç¢‰∏Ä‰∏™"XL"ÔºåÊàñ
//ËÄÖÁî®‰∏Ä‰∏™"XR"ÊõøÊç¢‰∏Ä‰∏™"RX"„ÄÇÁé∞ÁªôÂÆöËµ∑ÂßãÂ≠óÁ¨¶‰∏≤startÂíåÁªìÊùüÂ≠óÁ¨¶‰∏≤endÔºåËØ∑ÁºñÂÜô‰ª£Á†ÅÔºåÂΩì‰∏î‰ªÖÂΩìÂ≠òÂú®‰∏ÄÁ≥ªÂàóÁßªÂä®Êìç‰Ωú‰ΩøÂæóstartÂèØ‰ª•ËΩ¨Êç¢ÊàêendÊó∂Ôºå ËøîÂõû
//True„ÄÇ 
//
// 
//
// Á§∫‰æã : 
//
// ËæìÂÖ•: start = "RXXLRXRXL", end = "XRLXXRRLX"
//ËæìÂá∫: True
//Ëß£Èáä:
//Êàë‰ª¨ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÂá†Ê≠•Â∞ÜstartËΩ¨Êç¢Êàêend:
//RXXLRXRXL ->
//XRXLRXRXL ->
//XRLXRXRXL ->
//XRLXXRRXL ->
//XRLXXRRLX
// 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// 1 <= len(start) = len(end) <= 10000„ÄÇ 
// startÂíåend‰∏≠ÁöÑÂ≠óÁ¨¶‰∏≤‰ªÖÈôê‰∫é'L', 'R'Âíå'X'„ÄÇ 
// 
//
// Related Topics ÂèåÊåáÈíà Â≠óÁ¨¶‰∏≤ üëç 220 üëé 0

package leetcode.editor.cn; //Â¶ÇÊûú‰Ω†ÁöÑÁÆóÊ≥ïÈ¢òÊòØ‰∏≠ÊñáÁöÑÔºåÂêéÁºÄÂ∞±ÊòØcnÔºåÂ¶ÇÊûúÊòØËã±ÊñáÁöÑÂ∞±ÊòØen
 /**
 * @author  YourName
 * @date 2022-10-02 18:38:36
 */
public class SwapAdjacentInLrString{
    public static void main(String[] args) {
        Solution solution = new SwapAdjacentInLrString().new Solution();
   }
//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public boolean canTransform(String start, String end) {
        int i = 0;
        int j = 0;
        while (i < start.length() && j < end.length()) {
            while (i < start.length() && start.charAt(i) == 'X') {
                i++;
            }
            while (j < end.length() && end.charAt(j) == 'X') {
                j++;
            }
            if (i < start.length() && j < start.length()) {
                if (start.charAt(i) != end.charAt(j)) {
                    return false;
                }
                char c = start.charAt(i);
                if ((c == 'L' &&  i < j) || (c == 'R' && i > j)) {
                    return false;
                }
                i++;
                j++;
            }
        }
        while (i < start.length()) {
            if (start.charAt(i) != 'X') {
                return false;
            }
            i++;
        }
        while (j < end.length()) {
            if (end.charAt(j) != 'X') {
                return false;
            }
            j++;
        }
        return true;
    }
}
//leetcode submit region end(Prohibit modification and deletion)

}